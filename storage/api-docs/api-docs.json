{
    "openapi": "3.0.0",
    "info": {
        "title": "News Laravel",
        "description": "News Laravel API Documentation",
        "contact": {
            "email": "ajith.simon@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "News Laravel"
        }
    ],
    "paths": {
        "/article/articles": {
            "post": {
                "tags": [
                    "Article"
                ],
                "summary": "Search and filter articles",
                "description": "Search and filter articles.",
                "operationId": "caae3b44ffb9b9be8f969a8153d1619d",
                "requestBody": {
                    "description": "Article search and filter criteria",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search": {
                                        "description": "The keyword to search for articles",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "sources": {
                                        "description": "Array of source identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "categories": {
                                        "description": "Array of category identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "authors": {
                                        "description": "Array of author identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "date": {
                                        "description": "The date to filter articles (format: Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Articles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Articles retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate the user and return an access token.",
                "description": "Authenticate the user by providing valid credentials and return an access token.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "example": "ajith.simon@outlook.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid credentials",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The given data was invalid.",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke the user's access token and log them out.",
                "description": "Revoke the user's access token and log them out.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Logout message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/author/authors": {
            "post": {
                "tags": [
                    "Author"
                ],
                "summary": "Search and filter authors",
                "description": "Search and filter authors.",
                "operationId": "d6d7bb02f2ec490e55a411ca71bcd579",
                "requestBody": {
                    "description": "Author search and filter criteria",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search": {
                                        "description": "The keyword to search for authors",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authors retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authors retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/category/categorys": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Search and filter categorys",
                "description": "Search and filter categorys.",
                "operationId": "4d04e0ac212eb937b1ca91bdede78607",
                "requestBody": {
                    "description": "Category search and filter criteria",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search": {
                                        "description": "The keyword to search for categorys",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categorys retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categorys retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/source/sources": {
            "post": {
                "tags": [
                    "Source"
                ],
                "summary": "Search and filter sources",
                "description": "Search and filter sources.",
                "operationId": "77b4f89fa650dcfdd6497ccb43a936b7",
                "requestBody": {
                    "description": "Source search and filter criteria",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search": {
                                        "description": "The keyword to search for sources",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sources retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sources retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user.",
                "description": "Register a new user and return user details.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string",
                                        "example": "Ajith Simon"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "example": "ajith.simon@outlook.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "description": "Registered user details",
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/userpreference/preferences": {
            "post": {
                "tags": [
                    "UserPreference"
                ],
                "summary": "Insert or update user preference",
                "description": "Insert or update user preference.",
                "operationId": "1459ec017b05beb1b48f3c16fce23f23",
                "requestBody": {
                    "description": "User preference data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sources": {
                                        "description": "Array of source identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "authors": {
                                        "description": "Array of author identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "categories": {
                                        "description": "Array of category identifiers",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User preference updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User preference updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}